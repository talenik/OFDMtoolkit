function m = formatEmail( r )
%formatMail - formats the email text based on the waterfall result structure r
%
% message = formatMail( res )
%	see 'type formatEmail' for details on res fields
x = r.x ;

if x == size( r.EBN0, 2 )
	title = [ '%Simulation completed' ] ;

	msgf = { [ ' ' ] ; ...
		 	[ n2s( r.totalBits, 'r.totalBits' ) ] ; ...
		 	[ n2s( r.totalTime, 'r.totalTime' ) ] ; ...
		 	[ n2s( r.throughput, 'r.throughput' ) '% Mbps' ] } ;
else
	title = [ '%SIM step Nr.: ' num2str( x ) ' of ' num2str( size( r.EBN0, 2 ) ) ' done.' ] ;

	msgf = { [ ' ' ] } ;
end

msg = { [ '%Simulation settings:'] ; ...
		[ n2s( r.N,			'r.N' ) ] ; ...
		[ n2s( r.R,			'r.R' ) ] ; ...
		[ n2s( r.std,		'r.std' ) ] ; ...
		[ n2s( r.impl,		'r.impl' ) ] ; ...
		[ n2s( r.lambda,	'r.lambda' ) ] ; ...
		[ n2s( r.nIter,		'r.nIter' ) ] ; ...
		[ n2s( r.nThread,	'r.nThread' ) ] ; ...
		[ n2s( r.blockSize,	'r.blockSize' ) ] ; ...
		[ ' ' ] ; ...
		[ n2s( r.EBN0( 1 : x ),		'r.EBN0' ) ] ; ...
		[ n2s( r.DBits( 1 : x ),	'r.DBits' ) ] ; ...
		[ n2s( r.ERR( 1 : x ),		'r.ERR' ) ] ; ...
		[ n2s( r.BER( 1 : x ),		'r.BER' ) ] ; ...
		[ n2s( r.ITER( 1 : x ),		'r.ITER' ) ] ; ...
		[ n2s( r.TElaps( 1 : x ),	'r.TElaps' ) ] } ;

m = [ title ; msg ; msgf ] ;
